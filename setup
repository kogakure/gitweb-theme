#!/bin/bash


##########################################################
#   Configuration
##########################################################
#
# Here you can set the default installation directory
# 
DEFAULT_TARGET="/usr/share/gitweb"




##########################################################
#   Functions
##########################################################
#
# (no need to modify, unless you want to)
#
install()
{
	set_target
	set_cmd_args
	
	if [[ ( $(check_for_symlinks) == $TRUE ) && ( $(check_for_backups) == $TRUE ) ]];
	then
		log "$0: error - Symlinks and backups found in target (Is the theme already installed?)" >&2
		exit 1
	else

#Backing up
		if [[ $INTERACTIVE ]]
		then
			if [[ $(confirm "Backing up original files, continue?") == $FALSE ]]
			then
				echo ""
				exit 1
			else
				echo ""
			fi
		fi

		if [[ $(check_for_backups "complete") == $TRUE ]];
		then
			log "$0: notice - Original Backups already present, skipping..."
		else
			for FILE in "${THEME_FILES[@]}"
			do
				echo "-n" "$0: backing up - "
				mv $MV_ARGS "$TARGET/$FILE" "$TARGET/$FILE.bak"
			done
		fi


#Symlinking
		if [[ $INTERACTIVE ]]
		then
			if [[ $(confirm "Symlinking theme files, continue?") == $FALSE ]]
			then
				echo ""
				exit 1
			else
				echo ""
			fi
		fi

		if [[ $(check_for_symlinks "complete") == $TRUE ]];
		then
			log "$0: notice - Symlinks already present, skipping..."
		else
			for FILE in "${THEME_FILES[@]}"
			do
				echo "-n" "$0: linking - "
				ln $LN_ARGS "$THEME/$FILE" "$TARGET/$FILE"
			done
		fi

		log "Complete!"
	fi
}

remove()
{
	set_target
	set_cmd_args

	if [[ ( $(check_for_symlinks) == $TRUE ) && ( $(check_for_backups) == $TRUE ) ]];
	then
		log ""
		if [[ $INTERACTIVE && $(confirm "Deleting Symlinks, Continue?") == $FALSE ]]; then
			echo ""
			exit 1
		else
			echo ""
			if [[ $(check_for_symlinks) == $TRUE ]]
			then
				rm $RM_ARGS "$TARGET/$GW_CSS"
				rm $RM_ARGS "$TARGET/$GW_JS"
				rm $RM_ARGS "$TARGET/$GW_ICON"
				rm $RM_ARGS "$TARGET/$GW_LOGO"
			else
				echo "Symlinks not found, skipping."
			fi
		fi

		log ""
		if [[ $(confirm "Restoring Original Files, Continue?") == $FALSE ]]; then
			echo ""
			exit 1
		else
			echo ""
			mv $MV_ARGS "$TARGET/$GW_CSS.bak" "$TARGET/$GW_CSS"
			mv $MV_ARGS "$TARGET/$GW_JS.bak" "$TARGET/$GW_JS"
			mv $MV_ARGS "$TARGET/$GW_ICON.bak" "$TARGET/$GW_ICON"
			mv $MV_ARGS "$TARGET/$GW_LOGO.bak" "$TARGET/$GW_LOGO"
		fi

		echo ""
		echo "Complete!"
	else
		echo "Nothing to do, no symlinks or backups found in target (Is the theme already removed?)"
	fi
}

set_target()
{
	if [[ $TARGET && ( $(check_if_gitweb $TARGET) == $TRUE ) ]]
	then
		log "Using specified install path: '$TARGET'"
		$TARGET="$TARGET/static"
		
		if [[ $INTERACTIVE ]]; then
			if [[ $(confirm "Is this correct?") == $FALSE ]]; then
				echo ""
				exit 1
			fi
		fi
	else
		if [[ $(check_if_gitweb $DEFAULT_TARGET) == $TRUE ]]
		then
			log "Using default install path: '$DEFAULT_TARGET'"
			
			if [[ $INTERACTIVE ]]; then
				if [[ $(confirm "Is this correct?") == $FALSE ]]
				then
					echo ""
					exit 1
				else
					echo ""
					TARGET="$DEFAULT_TARGET/static"
				fi
			fi
		else
			echo "Couldn't find static folder in the install path."
			echo "Are you sure this folder contains gitweb?"
		fi
	fi
}

set_cmd_args()
{
	MV_ARGS=""
	LN_ARGS=""
	RM_ARGS=""

	if [[ $VERBOSE ]];
	then
		MV_ARGS="-v"
		LN_ARGS="-v -s"
		RM_ARGS="-v"
	fi
	
	if [[ $INTERACTIVE ]];
	then
		MV_ARGS="-i"
		LN_ARGS="-i -s"
		RM_ARGS="-i"
	fi
	
	if [[ $INTERACTIVE && $VERBOSE ]];
	then
		MV_ARGS="-i -v"
		LN_ARGS="-i -v -s"
		RM_ARGS="-i -v"
	fi
}

check_if_gitweb()
{
	if [[ -d "$1/static" ]]
	then
		echo $TRUE
	else
		echo $FALSE
	fi
}

check_for_symlinks()
{
	if [[ "$1" == "complete" ]]
	then
		if [[ -h "$TARGET/$GW_CSS" && \
			  -h "$TARGET/$GW_JS" && \
			  -h "$TARGET/$GW_ICON" && \
			  -h "$TARGET/$GW_LOGO" ]]
		then
			echo $TRUE
		else
			echo $FALSE
		fi
	else
		if [[ -h "$TARGET/$GW_CSS" || \
			  -h "$TARGET/$GW_JS" || \
			  -h "$TARGET/$GW_ICON" || \
			  -h "$TARGET/$GW_LOGO" ]]
		then
			echo $TRUE
		else
			echo $FALSE
		fi
	fi
}

check_for_backups()
{
	if [[ "$1" == "complete" ]]
	then
		if [[ -e "$TARGET/$GW_CSS.bak" && \
			  -e "$TARGET/$GW_JS.bak" && \
			  -e "$TARGET/$GW_ICON.bak" && \
			  -e "$TARGET/$GW_LOGO.bak" ]]
		then
			echo $TRUE
		else
			echo $FALSE
		fi
	else
		if [[ -e "$TARGET/$GW_CSS.bak" || \
			  -e "$TARGET/$GW_JS.bak" || \
			  -e "$TARGET/$GW_ICON.bak" || \
			  -e "$TARGET/$GW_LOGO.bak" ]]
		then
			echo $TRUE
		else
			echo $FALSE
		fi
	fi
}

confirm()
{
	read -n 1 -p "$1 ([y]es / [n]o) : " REPLY
	
	case $REPLY in
		y|Y)
			echo $TRUE
		;;
		n|N)
			echo $FALSE
		;;
		*)
			echo "You must answer [y]es or [n]o"
			confirm "$1"
		;;
	esac
}

log()
{
	if [[ $VERBOSE ]]; then
		if [[ $1 == "-n" ]]
		then
			echo -n "$2"
		else
			echo "$1"
		fi
	fi
}

usage()
{
cat << EOF
Usage: $0 [-v|-i] [-t <TARGET>|--target <TARGET>] [--install|--remove|--repair]
Or: $0 [-V|-h|--version|--help] 

This script will create symlinks to your gitweb install for themeing.
The default location is '/usr/share/gitweb' unless set via -t or --target. 

OPTIONS:
  -v, --verbose       Verbose output
  -i, --interactive   Pauses for confirmation at each step
  -t, --target        Where to create the symlinks, gitweb installation path
  -h, --help          Shows this usage message
  -V, --version       Displays version information
  --install           Adds '.bak' to original files and creates symlinks to theme files
  --remove            Deletes themed symlinks and restores the original files.
  --repair            Removes all theme files, then reinstalls
EOF
}



##########################################################
#   Let's Go!
##########################################################
PROG_NAME=$0
PROG_VERSION="0.9.0"
AUTHOR="Kevin Hill <http://github.com/kevinkhill>"

TARGET=
THEME=`pwd`
INTERACTIVE=false
VERBOSE=false

GW_CSS="gitweb.css"
GW_JS="gitweb.js"
GW_ICON="git-favicon.png"
GW_LOGO="git-logo.png"

THEME_FILES=( "gitweb.css" "gitweb.js" "git-favicon.png" "git-logo.png" )

SHORT_OPTS="hviVt:"
LONG_OPTS="help,verbose,interactive,version,target:,install,remove"
OPTS=$(getopt -o "$SHORT_OPTS" -l "$LONG_OPTS" --name "$0" -- "$@")

readonly TRUE=0
readonly FALSE=1

if [ $? != 0 ]; then
    exit 1
fi

eval set -- "$OPTS"
unset OPTS

if [ $# -eq 0 ]; then
	echo "$0: error - no options specified" >&2
	usage
fi

while [ $# -gt 0 ]; do
	case $1 in
		-h|--help|-\?)
			usage
			exit 0
		;;
		-v|--verbose)
			VERBOSE=true
			shift
		;;
		-i|--interactive)
			INTERACTIVE=true
			shift
		;;
		-t|--target)
			TARGET=$2
		;;
		-V|--version)
			usage
			echo ""
			echo "Gitweb Theme Installer Script - v$PROG_VERSION"
			echo " Author: $AUTHOR"
		;; 
		--install)
			install
		;;
		--remove)
			remove
		;;
		--repair)
			remove
			install
		;;
		--)
			shift
			break
		;;
		-*)
			echo "$0: error - unrecognized option $1" >&2
			shift
		;;
		*)
			break
		;;
	esac
	shift
done

echo "TARGET=$TARGET"
echo "INTERACTIVE=$INTERACTIVE"
echo "VERBOSE=$VERBOSE"

exit 0
